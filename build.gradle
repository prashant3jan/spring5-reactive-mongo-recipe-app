buildscript {
	ext {
		springBootVersion = '2.2.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	//implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	implementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'
	implementation 'org.webjars:bootstrap:4.6.0-1'
	//compileOnly('org.projectlombok:lombok')
    implementation('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
    testImplementation ('org.junit.jupiter:junit-jupiter:5.6.0')
	implementation(group: 'org.springframework', name: 'spring-jdbc', version: '5.0.9.RELEASE')
}
	test {
		useJUnitPlatform()
}

//export test coverage
jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}